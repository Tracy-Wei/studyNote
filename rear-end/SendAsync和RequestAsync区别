## RequestAsync

用途：RequestAsync 用于发送请求消息，通常表示需要从系统中获取某种数据或执行某种查询操作，并且需要返回结果。这些操作通常用于读取数据或查询应用程序的状态。

预期结果：由于它们需要返回结果，因此通常会返回包含所请求数据的响应消息。这可以是一个包含查询结果的对象，或者可能包含更多详细信息。

示例：在你的代码示例中，GetProductByIdRequest 可能用于查询特定 ID 的产品的详细信息，并且你期望返回包含该产品详细信息的响应消息。

## SendAsync

用途：SendAsync 通常用于发送命令消息，表示执行某种操作，但不需要返回结果。这些操作通常是改变应用程序状态的操作，例如创建、更新、删除等。

预期结果：由于它们不需要返回结果，因此通常不会返回任何数据，或者可能返回一个简单的状态指示操作是否成功。

示例：在你的代码示例中，AddProductCommand 可能用于添加产品到数据库，而不需要返回产品的详细信息。

#### 总的来说：SendAsync 用于发送命令消息，而 RequestAsync 用于发送请求消息，

使用 SendAsync 当你需要执行不需要返回结果的命令式操作，例如创建、更新或删除数据。

使用 RequestAsync 当你需要执行查询式操作，需要从系统中获取数据或执行查询，并需要接收包含结果的响应消息。

## Command（命令）

用途：命令通常用于指示系统执行某种操作，但不一定需要返回结果。它们通常用于改变应用程序的状态或执行一些副作用操作，如创建、更新或删除数据，触发事件等。

返回结果：通常，命令不返回直接的结果，而是通过事件、回调或其他方式来通知操作的完成或状态的变化。

示例：创建一个名为 "AddProductCommand" 的命令，用于将新产品添加到数据库中，通常不需要返回产品的详细信息。

## Request（请求）

用途：请求通常用于获取系统中的数据或执行查询操作，需要返回结果。它们通常用于读取应用程序的状态或获取特定的信息。

返回结果：请求需要返回包含所请求数据的响应消息，通常包含所需的数据或查询结果。

示例：创建一个名为 "GetProductByIdRequest" 的请求，用于查询特定 ID 的产品的详细信息，并期望返回包含该产品详细信息的响应消息。
